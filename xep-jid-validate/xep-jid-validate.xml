<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>JID Validation Service</title>
  <abstract>Specifies a service that validates JIDs on request.</abstract>
  &LEGALNOTICE;
  <number>xxxx</number>
  <status>ProtoXEP</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0001</spec>
    <spec>Etc.</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>jid-validate</shortname>
  &flow;
  <revision>
    <version>0.0.1</version>
    <date>2019-09-06</date>
    <initials>psa</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>

<section1 topic='Introduction' anchor='intro'>
  <p>Usefull to test the PRECIS / JID enforcement implementation of XMPP services. Advantages over xep328: base64 encoded string possible. No jid-malformed error IQ response in case the stanza is not valid. This makes it impossible to distinguish from e.g. a malformed jid in 'to'. Parts are returned split.</p>
</section1>

<section1 topic='JID Validation IQ Service' anchor='service'>
  <p>If supported, service announces 'urn:xmpp:jid-validate:0'
  feature.</p>

  <example caption='IQ validation request'><![CDATA[
<iq type='get'
    from='user@example.org/resource'
    to='example.org'
    id='request1'>
  <jid-validate-request xmlns='urn:xmpp:jid-validate:0'>
    <maybe-jid>Σ@example.com/resource</maybe-jid>
  </jid-validate-request>
</iq>]]></example>

  <p>If the JID is valid, then a &lt;jid-validate-result/&gt; with a
  &lt;valid-jid/&gt; child element is returned. The valid-jid element
  MUST contain 'domainpart' and may contain 'localpart' and/or
  'resourcepart' elements. If the JID does not contain a local- or
  resourcepart, then the element is omitted.</p>

  <example caption='Valid JID result'><![CDATA[
<iq type='result'
    from='example.org'
    to='user@example.org/resource'
    id='request1'>
  <jid-validate-result xmlns='urn:xmpp:jid-validate:0'>
    <valid-jid>
      <localpart>σ</localpart>
      <domainpart>example.com</domainpart>
      <resourcepart>resource</resourcepart>
    <valid-jid>
  </jid-validate-result>
</iq>]]></example>

  <example caption='IQ validation request'><![CDATA[
<iq type='get'
    from='user@example.org/resource'
    to='example.org'
    id='request2'>
  <jid-validate-request xmlns='urn:xmpp:jid-validate:0'>
    <maybe-jid>henryⅣ@example.com</maybe-jid>
  </jid-validate-request>
</iq>]]></example>

  <example caption='Invalid JID result'><![CDATA[
<iq type='result'
    from='example.org'
    to='user@example.org/resource'
    id='request2'>
  <jid-validate-result xmlns='urn:xmpp:jid-validate:0'>
    <invalid-jid>
      <reason>Invalid codepoint 'Ⅳ' in localpart.</reason>
    </invalid-jid>
  </jid-validate-result>
</iq>]]></example>

</section1>

<section1 topic='Optional Base64 Encoded Variant' anchor='base64'>
  <p>If supported, service announces 'urn:xmpp:jid-validate:base64:0'
  feature. Responses as above.</p>

    <example caption='IQ validation request'><![CDATA[
<iq type='get'
    from='user@example.org/resource'
    to='example.org'
    id='request1'>
  <jid-validate-base64-request xmlns='urn:xmpp:jid-validate:0'>
    <base64-maybe-jid>zqNAZXhhbXBsZS5jb20vcmVzb3VyY2U=</base64-maybe-jid>
  </jid-validate-base64-request>
</iq>]]></example>

</section1>

<section1 topic='Security Considerations' anchor='security'>

  <p>TODO: Consider restricting access to service, e.g. to local or
  admin users only, or rate limit it.</p>

</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>REQUIRED.</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <p>REQUIRED.</p>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <p>REQUIRED for protocol specifications.</p>
</section1>
</xep>
