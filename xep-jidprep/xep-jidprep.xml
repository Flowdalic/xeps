<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
  <!ENTITY rfc8264 "<span class='ref'><link url='http://tools.ietf.org/html/rfc8264'>RFC 8264</link></span> <note>RFC 8264:  PRECIS Framework: Preparation, Enforcement, and Comparison of Internationalized Strings in Application Protocols &lt;<link url='http://tools.ietf.org/html/rfc8264'>http://tools.ietf.org/html/rfc8264</link>&gt;.</note>" >
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>JID Preperation and Validation Service</title>
  <abstract>This specification defines a way for an XMPP entity to request another entity to prepare and validate a given JID.</abstract>
  &LEGALNOTICE;
  <number>0328</number>
  <status>Experimental</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XMPP IM</spec>
    <spec>XEP-0030</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>jid-prep</shortname>
  <author>
    <firstname>Lance</firstname>
    <surname>Stout</surname>
    <email>lance@lance.im</email>
    <jid>lance@lance.im</jid>
  </author>
  &flow;
  <revision>
    <version>0.2</version>
    <date>2019-09-09</date>
    <initials>fs</initials>
    <remark>
	  <ul>
		<li>Do not return error IQ result if the string to validate is
		not a valid JID. It is indistinguishable if the error is
		caused by the string to check, or if some other involved JID,
		like the one in the 'to' attribute, is malformed.</li>
		<li>Return the normalized JID in its parts, to make it clear
		which parts constitute the JID</li>
		<li>Do not use text as child of an IQ child element. Using
		text makes it impossible to inject further child elements as
		XMPP disallows mixed content.</li>
		<li>Add support for base64 encoding.</li>
		<li>Always announce the jidprep identity.</li>
	  </ul>
	</remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2013-05-28</date>
    <initials>psa</initials>
    <remark><p>Initial published version approved by the XMPP Council.</p></remark>
  </revision>
  <revision>
    <version>0.0.2</version>
    <date>2013-05-21</date>
    <initials>lance</initials>
    <remark><p>Incorporated feedback.</p></remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2013-05-08</date>
    <initials>lance</initials>
    <remark><p>Initial version.</p></remark>
  </revision>
</header>

<section1 topic='Introduction' anchor='intro'>

  <p>In order to properly compare and match JIDs, a normalization step
  is required by &rfc7622; (called 'Preparation' and 'Enforcement' by
  &rfc8264;). The protocol defined herein can be used to
  ask XMPP entities to perform such a normalization. Amongst other
  use-cases, this protocol can be used for testing purposes, where a
  testsuite checks the conformance of an normalization
  implementation of e.g., an XMPP server implementation.</p>

  <p>Furthermore, in some environments, especially ones like IoT where
  devices with constraint resources are used, a client may not have
  access to the various Unicode and internationalization libraries
  necessary to properly normalize a JID. For those situations, this
  protocol can be used by a client to ask a server to normalize a JID
  on its behalf.</p>

</section1>

<section1 topic='Discovering support' anchor='disco'>

  <p>If a server supports JID prep queries, it MUST specify the
  'urn:xmpp:jidprep:1' feature in its service discovery information
  features as specified in &xep0030; and announce an identity of
  "component/jidprep".</p>

  <example caption='Server advertises support for JID prep queries'><![CDATA[
<iq type="result"
    to="juliet@capulet.lit/balcony"
    from="capulet.lit"
    id="info1">
  <query xmlns="http://jabber.org/protocol/disco#info">
    <identity category="component" type="jidprep" />
    ...
    <feature var="urn:xmpp:jidprep:1" />
  </query>
</iq>]]></example>

</section1>

<section1 topic='Use Cases' anchor='usecases'>

  <p>In order to request prepping and validaation of a string to a
  JID, the client sends an &IQ; stanza of type "get" to the server,
  containing a &lt;jid-validate-request/&gt; element qualified by the
  'urn:xmpp:jidprep:1' namespace. TODO: describe childs</p>

  <example caption='IQ validation request'><![CDATA[
<iq type='get'
    from='user@example.org/resource'
    to='example.org'
    id='request1'>
  <jid-validate-request xmlns='urn:xmpp:jidprep:1'>
    <maybe-jid>Σ@example.com/resource</maybe-jid>
  </jid-validate-request>
</iq>]]></example>

    <p>If the given string can be enforced to a valid JID, then a
    &lt;jid-validate-result/&gt; with a &lt;valid-jid/&gt; child
    element is returned. This child element contains the normalized
    JID parts. The valid-jid element MUST contain 'domainpart' and
    may contain 'localpart' and/or 'resourcepart' elements. If the JID
    does not contain a local- or resourcepart, then the element is
    omitted. The 'domainpart', 'localpart' and 'resourcepart' elements
    contain the normalized, i.e. PRECIS enforced strings of the
    respective JID parts</p>

  <example caption='Valid JID result'><![CDATA[
<iq type='result'
    from='example.org'
    to='user@example.org/resource'
    id='request1'>
  <jid-validate-result xmlns='urn:xmpp:jidprep:1'>
    <valid-jid>
      <localpart>σ</localpart>
      <domainpart>example.com</domainpart>
      <resourcepart>resource</resourcepart>
    <valid-jid>
  </jid-validate-result>
</iq>]]></example>

  <p>If the service is given an invalid JID, a
  &lt;jid-validate-result/&gt; IQ result response with an
  &lt;invalid-jid/&gt; elmeent is returned.</p>

  <example caption='IQ validation request'><![CDATA[
<iq type='get'
    from='user@example.org/resource'
    to='example.org'
    id='request2'>
  <jid-validate-request xmlns='urn:xmpp:jidprep:1'>
    <maybe-jid>henryⅣ@example.com</maybe-jid>
  </jid-validate-request>
</iq>]]></example>

  <example caption='Invalid JID result'><![CDATA[
<iq type='result'
    from='example.org'
    to='user@example.org/resource'
    id='request2'>
  <jid-validate-result xmlns='urn:xmpp:jidprep:1'>
    <invalid-jid>
      <reason>Invalid codepoint 'Ⅳ' in localpart.</reason>
    </invalid-jid>
  </jid-validate-result>
</iq>]]></example>

</section1>

<section1 topic='Optional Base64 Encoding' anchor='base64'>

  <p>To be able to feed arbitrary strings into the validator, not
  being limited by XML 1.0, the protocol supports an optional Base64
  (TODO: reference) encoding of the string to validate.</p>

  <p>If supported, service announces 'urn:xmpp:jidprep:base64:1'
  feature. Responses as above.</p>

    <example caption='IQ validation request'><![CDATA[
<iq type='get'
    from='user@example.org/resource'
    to='example.org'
    id='request1'>
  <jid-validate-base64-request xmlns='urn:xmpp:jidprep:1'>
    <base64-maybe-jid>zqNAZXhhbXBsZS5jb20vcmVzb3VyY2U=</base64-maybe-jid>
  </jid-validate-base64-request>
</iq>]]></example>

</section1>

<section1 topic="Implementation Notes" anchor='impl'>

  <p>If a client has the ability to perform the normalization process
  itself, it SHOULD NOT make use of the protocol defined herein.</p>

  <p>Upon a successful response, the client SHOULD cache the result,
  mapping the original JID to the normalized version.</p>

</section1>

<section1 topic='Security Considerations' anchor='security'>

  <p>As the process for normalizing and validating a JID can be
  resource intensive, there is a possibility for denial of service
  attacks. A server MAY rate limit the number of requests to prevent
  such attacks. Likewise, the server MAY restrict access to the
  service torequests from users that are local to the server or
  otherwhise trusted.</p>

</section1>

<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>

<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <section2 topic='Protocol Namespaces' anchor='ns'>
    <p>The &REGISTRAR; includes 'urn:xmpp:jidprep:1' in its registry of protocol namespaces (see &NAMESPACES;).</p>
    <ul>
      <li>urn:xmpp:jidprep:1</li>
    </ul>
  </section2>
  <section2 topic='Protocol Versioning' anchor='registrar-versioning'>
    &NSVER;
  </section2>
  <section2 topic='Service Discovery Category/Type' anchor='registrar-disco'>
    <p>The &REGISTRAR; includes a category of "component" in its registry of Service Discovery identities (see &DISCOCATEGORIES;); as a result of this document, the Registrar includes a type of "jidprep" to that category.</p>
    <p>The registry submission is as follows:</p>
    <code><![CDATA[
    <category>
      <name>component</name>
      <type>
        <name>jidprep</name>
        <desc>
          A server component that offers a JID prepping
          and normalization service to constrained clients.
        </desc>
        <doc>XEP-0328</doc>
      </type>
    </category>
]]></code>
  </section2>
</section1>

<section1 topic='XML Schema' anchor='schema'>

  <p>TODO: Add once the XEP leaves the experimental state.</p>

</section1>

</xep>
