<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Stream Ability Announcements</title>
  <abstract>This specification defines a stream feature to annouce different stream abilities that, amoungst other things, can be used to perform optimizations on the XML data.</abstract>
  &LEGALNOTICE;
  <number>xxxx</number>
  <status>ProtoXEP</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>saa</shortname>
  &flow;
  <revision>
    <version>0.0.1</version>
    <date>2021-12-28</date>
    <initials>fs</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>This is a template for use in writing XMPP Extension Protocol specifications (XEPs). For detailed information about the XSF's standards process and how to write a XEP, refer to "XEP-0001: XMPP Extension Protocols" and "XEP-0143: Guidelines for Authors of XMPP Extension Protocols".</p>
</section1>

<section1 topic='The Abilities Stream Feature' anchor='reqs'>

  <example caption='The Abilities Stream Feature'><![CDATA[
<stream:features>
  <abilities xmlns='urn:xmpp:stream-abilities:0'>
    <ability name='xml-namespace-prefixes'/>
  </abilities>
</stream:features>]]></example>

  <p>The &lt;abilities/&gt; stream feature SHOULD be send after the
  receiving entity was able to authenticate the sending entity. The
  receiving entity MUST only evaluate and act-upon the
  &lt;abilities/&gt; stream feature after the sending entity has been
  authenticated (if such an authentication is possible). Note that the
  &lt;abilities/&gt; stream feature SHOULD be annoucement after each
  suitable stream restart (RFC6120 § 4.3.3).</p>

  <p>For client-to-server and server-to-server connections, this means
  that the server may not send the &lt;abilities/&gt; stream feature
  before transport layer security (TLS) has been established. In
  client-to-server connections, clients may only evaluate and act-upon
  the &lt;abilities/&gt; stream feature after they successfully
  authenticated with the server.</p>

</section1>

<section1 topic='Stream Abilities' anchor='stream-abilities'>
  <section2 topic='XML Namespace Prefixes' anchor='ability-xml-namespace-prefixes'>
	  <example caption='An optimized XML stream using XML namespace prefixes'><![CDATA[
<stream:stream
  from='juliet@example.com'
  to='example.com'  
  version='1.0'
  xmlns='jabber:client'
  xmlns:stream='http://etherx.jabber.org/streams'
  xmlns:sm='urn:xmpp:sm:3'
  >
…
<sm:enable/>
…
<sm:r/>
…
<sm:a h='1'/>
]]></example>
  </section2>
</section1>
<section1 topic='Business Rules' anchor='rules'>
  <p>OPTIONAL.</p>
</section1>
<section1 topic='Implementation Notes' anchor='impl'>
  <p>OPTIONAL.</p>
</section1>
<section1 topic='Accessibility Considerations' anchor='access'>
  <p>OPTIONAL.</p>
</section1>
<section1 topic='Internationalization Considerations' anchor='i18n'>
  <p>OPTIONAL.</p>
</section1>

<section1 topic='Security Considerations' anchor='security'>
  <p>Spoofed &lt;abilities/&gt; stream feature could be used to
  disturb the communication of two entities. Hence any receiving
  entity MUST only evaluate and act-upon the &lt;abilities/&gt; stream
  feature after the sending entity has been authenticated (if such an
  authentication is possible).</p>
</section1>

<section1 topic='IANA Considerations' anchor='iana'>
  <p>REQUIRED.</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <p>REQUIRED.</p>
</section1>
<section1 topic='Design Considerations' anchor='design'>
  <!-- Use this section to describe other approaches which have been considered
  during the design of this protocol and why they have been rejected. Having
  the result and a summary of long or complicated discussions in the document
  itself instead of list or chat archives serves future readers. -->
  <p>RECOMMENDED.</p>
</section1>
<section1 topic='XEP Styling Examples (1st Level Heading)' anchor='styling'>
  <p>PLEASE REMOVE THIS SECTION. These are just examples for the RECOMMENDED ways to style your XEP.</p>
  <section2 topic='2nd Level Heading' anchor='styling-examples'>
    <p>This is regular XEP text. It can contain <strong>strong</strong> and <em>emphasized</em> markup as well as <tt>fixed-width text</tt>.</p>
    <p>This is text with a line break.<br/>New line.</p>
    <p>This is text with a footnote<note>This is the footnote.</note>.</p>
    <p>This is a <link url='#styling-examples'>link to a section in this document</link>.</p>
    <p>This is a reference to another XEP: &xep0001;, it can be re-referenced as <cite>XEP-0001</cite> later in the text.</p>
    <code caption='Code block caption'>Code block content.</code>
    <ol>
      <li>This is an ordered list. First item</li>
      <li>Second item</li>
    </ol>
    <ul>
      <li>This is an unordered list. First item</li>
      <li>Second item</li>
    </ul>
    <dl>
      <di>
        <dt>Definition List</dt>
        <dd>
          A definition list contains definition items with a title and a description.
        </dd>
      </di>
    </dl>
    <p class='box'>Note: This is an informational box</p>
    <example caption='Example of embedding XMPP XML'><![CDATA[
<iq from='hag66@shakespeare.lit/pda'
    id='h7ns81g'
    to='shakespeare.lit'
    type='get'>
  <query xmlns='http://jabber.org/protocol/disco#items'/>
</iq>
]]></example>
    <section3 topic='3rd Level Heading' anchor='syling-examples-3rd'>
      <p>Text in a Sub-Sub-Section.</p>
      <section4 topic='4th Level Heading' anchor='syling-examples-4th'>
        <p>Text in a Sub-Sub-Sub-Section.</p>
      </section4>
    </section3>
  </section2>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <p>REQUIRED for protocol specifications.</p>
</section1>
</xep>
